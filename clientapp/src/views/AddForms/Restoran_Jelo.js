import React, { useState, useEffect } from "react";
import axios from "axios";

const RestoranJelo = () => {
  const [formData, setFormData] = useState({
    id_rj: "",           // Optional if auto-generated by backend
    id_restoran: "",
    id_jelo: "",
  });

  const [restorani, setRestorani] = useState([]);
  const [jela, setJela] = useState([]);
  const [message, setMessage] = useState("");

  // Fetching available restorani and jela from the API
  useEffect(() => {
    const fetchRestorani = async () => {
      try {
        const response = await axios.get("http://localhost:5269/api/restoran");
        setRestorani(response.data);
      } catch (error) {
        console.error("Error fetching restorani:", error);
      }
    };

    const fetchJela = async () => {
      try {
        const response = await axios.get("http://localhost:5269/api/jelo");
        setJela(response.data);
      } catch (error) {
        console.error("Error fetching jela:", error);
      }
    };

    fetchRestorani();
    fetchJela();
  }, []);

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value,
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      const response = await axios.post("http://localhost:5269/api/restoran_jelo", formData);
      if (response.status === 200 || response.status === 201) {
        setMessage("Podaci uspješno poslani!");
        setFormData({
          id_rj: "",         // Reset field
          id_restoran: "",
          id_jelo: "",
        });
      }
    } catch (error) {
      setMessage("Greška prilikom slanja podataka.");
      console.error("Error:", error);
    }
  };

  return (
    <div style={{ maxWidth: "400px", margin: "auto", textAlign: "center" }}>
      <h2>Unos Podataka za Restoran-Jelo</h2>
      <form onSubmit={handleSubmit}>
        <input type="text" name="id_rj" placeholder="ID Restoran-Jelo (optional)" value={formData.id_rj} onChange={handleChange} />
        
        <select name="id_restoran" value={formData.id_restoran} onChange={handleChange} required>
          <option value="">Odaberite Restoran</option>
          {restorani.map((restoran) => (
            <option key={restoran.id_restoran} value={restoran.id_restoran}>
              {restoran.naziv}
            </option>
          ))}
        </select>

        <select name="id_jelo" value={formData.id_jelo} onChange={handleChange} required>
          <option value="">Odaberite Jelo</option>
          {jela.map((jelo) => (
            <option key={jelo.id_jelo} value={jelo.id_jelo}>
              {jelo.naziv}
            </option>
          ))}
        </select>

        <button type="submit">Pošalji</button>
      </form>
      {message && <p>{message}</p>}
    </div>
  );
};

export default RestoranJelo;